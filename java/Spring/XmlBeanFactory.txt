public XmlBeanFactory(Resource resource, BeanFactory parentBeanFactory) throws BeansException 
{
		super(parentBeanFactory);
		this.reader.loadBeanDefinitions(resource);
}

调用父类构造方法：DefaultListableBeanFactory
public DefaultListableBeanFactory(BeanFactory parentBeanFactory)
 {
		super(parentBeanFactory);
}
再次调用父类构造方法：AbstractAutowireCapableBeanFactory
public AbstractAutowireCapableBeanFactory(BeanFactory parentBeanFactory)
 {
		this();
		setParentBeanFactory(parentBeanFactory);
}
public AbstractAutowireCapableBeanFactory() 
{
		super();
		//忽略给定接口的自动装配功能
		ignoreDependencyInterface(BeanNameAware.class);
		ignoreDependencyInterface(BeanFactoryAware.class);
		ignoreDependencyInterface(BeanClassLoaderAware.class);
}
原因：当A中有属性B，那么当Spring在获取A的Bean的时候如果其属性B还没有初始化，那么Spring会自动初始化B，但在某些情况下
           B不会被初始化，其中一种情况就是实现了BeanNameAware接口。Spring是这样介绍的：自动装配时忽略给定的依赖接口，典型应用
		   是通过解析Application上下文注册以来，类似于BeanFactory通过BeanFactoryAware进行注入或者ApplicationContext通过ApplicationContexxtAware
		   进行注入的。
		   
XmlBeanFactory具体初始化IOC容器请查看：IOC.txt


























