在eclipse启动GC日志打印：
 在eclipse根目录下修改eclipse.ini配置文件添加一下参数：

-verbose:gc（开启打印垃圾回收日志）
-Xloggc:eclipse_gc.log（设置垃圾回收日志打印的文件，文件名自定义）
-XX:+PrintGCTimeStamps（打印垃圾回收时间信息的时间格式）
-XX:+PrintGCDateStamps
-XX:+PrintGCApplicationConcurrentTime（打印应用程序执行时间）
-XX:+PrintGCApplicationStoppedTime（打印应用程序由于GC而产生的停顿时间）
-XX:+PrintHeapAtGC(每次在GC前后打印堆信息)
-XX:+PrintGCDetails（打印垃圾回收详情）
-XX:+PrintReferenceGC（打开系统内的软引用，弱引用，虚引用和Finalize队列）

类的跟踪和卸载：
	-verbose:class（跟踪类的加载和卸载）
	-XX:+TranceClassLoading（跟踪类的加载）
	-XX:+TranceClassUnloading（跟踪类的卸载）

系统参数查看：
	-XX:+PrintVMOptions（可以在程序运行时，打印虚拟机接受到的命令行参数）
	-XX:PrintCommandLineFlags（打印传递给虚拟机的显示和隐式参数，隐式参数未必是通过命令行直接传递的，它可能是虚拟机自行设置的）
	-XX:PrintFlagsFinal（打印所有的系统参数值）


添加JVM监控参数:
	-Djava.rmi.server.hostname=127.0.0.1
	-Dcom.sun.management.jmxremote.port=6688
	-Dcom.sun.management.jmxremote.ssl=false
-Dcom.sun.management.jmxremote.authenticate=false

GC日志格式说明：

GC打印时间（Java虚拟机启动以来经过的时间）:[垃圾收集的停顿类型:[收集器名称（GC发生区域）:年轻代回收前占用大小->年轻代回收后占用大小，GC过程中JVM暂停处理的时间（GC所占用的时间）]GC前Java堆已使用容量->GC后Java堆已使用容量（Java堆总容量）]
[Times:user=?,sys=?,real=?]代表了用户态消耗的CPU时间，内核态消耗的CPU事件和操作从开始到结束的墙钟时间。

垃圾收集的停顿类型：GC和Full GC。
	GC:一般为堆空间某个区发生了垃圾回收。
	Full GC:说明GC发生了Stop-The-World，基本整个堆空间及持久代发生了垃圾回收，通常优化的目标之一是尽量减少GC和Full GC的频率。
收集器的名称（别名）：区域名称与使用GC收集器密切相关，通过这个名称基本上都可以判断那个区发生了GC。
	DefNew（Default New Generation）：年轻代（新生代）发生了GC（串行收集器）
	ParNew（Parallel New Generation）:年轻代（新生代）发生GC（并行收集器）
	Tenured:老年代发生GC
	Perm:持久代发生了GC

