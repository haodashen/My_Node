第一种写法：
	public class Singleton
	{
		private static  Singleton instance = null ;
		private Singleton() {}
		public static Singleton getInstance()
		{
			if(instance == null)
			{
				synchronized(Singleton.class)
				{
					if(instance == null)
					{
						instance = new Singleton() ;
					}
				}
			}
			return instance ;
		}
		public static void main(String[] args)
		{
			IntStream.range(0, 1000000).forEach(i->new Thread("Thread-"+String.valueOf(i)) {
				public void run() {
					System.out.println(Singleton.getInstance().hashCode());
				}; 
			}.start());
		}
	}
	
第二种方法：
		public class Singleton
		{
			private static class SingletonHolder
			{
				private static final Singleton singleton = new Singleton();
			}
			
			public static Singleton getsInstance()
			{
				return SingletonHolder.singleton;
			}
		}
第三种写法：
		public class Singleton
		{
			private enum SingletonHolder
			{
				INSTANCE ;
				private  final Singleton singleton ;
				SingletonHolder()
				{
					singleton = new Singleton();
				}
				public Singleton getInstrence()
				{
					return singleton;
				}
			}
			public Singleton getInstance()
			{
				return SingletonHolder.INSTANCE.getInstrence();
			}
		}