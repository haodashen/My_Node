交换器类型：1.fanout：它会把所有发送到该交换器的消息路由到所有与该交换器绑定的队列中
             2.direct：direct 类型的交换器路由规则也很简单，它会把消息路由到那些BindingKey 和RoutingKey
                      完全匹配的队列中。
	     3.topic：与direct相似，但是在此基础上进行了扩展，匹配规则有些不同：
	               （1）RoutingKey 为一个点号"."分隔的字符串(被点号"."分隔开的每一段独立的字符串称为一个单词，如
		           "com.rabbitmq.client"，"java.util.concurrent"，"code.lsh"
		       （2）BindingKey和RoutingKey一样也是点号"."分隔的字符串;
		       （3）BindingKey 中可以存在两种特殊字符串"*"和"#"，用于做模糊匹配，其中"#"用匹配一个单词，
		             "*"用于匹配多个单词。
	     4.headers：headers 类型的交换器不依赖于路由键的匹配规则来路由消息，而是根据发送的消息内容中
			的headers 属性进行匹配。在绑定队列和交换器时制定一组键值对， 当发送消息到交换器时，
			RabbitMQ 会获取到该消息的headers (也是一个键值对的形式) ，对比其中的键值对是否完全
			匹配队列和交换器绑定时指定的键值对，如果完全匹配则消息会路由到该队列，否则不会路由
			到该队列。headers 类型的交换器性能会很差，而且也不实用，基本上不会看到它的存在。