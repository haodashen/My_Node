1.数据库进本设计规范
  （1）所有数据库对象的名称都应该小写。
  （2）命名有见名之意，禁止使用MySQL保留关键字。
  （3）临时表要以tmp_开头，备份表要以bak_开头并以时间戳结尾
  （4）所有存储相同数据的列名和列类型都要必须一致
  （5）数据库和表同意使用UTF8，统一字符集可以避免字符集转换造成的乱码。
  （6）所有表的字段都要加上注释
  （7）尽量控制单表数据量的大小，建议控制在500万以内，可以用历史数据归档，分库分表等手段控制数据量的大小。
  （8）谨慎使用MySQL分区表。
        分区表在物理上表现为多个文件，而在逻辑上表现为一个表。
        谨慎选择分区键，跨区查询效率可能更低。
	建议采取物理分表的方式进行管理大数据。
  （9）尽量做到冷热分离，减少表的宽度。
        MySQL中限制最多存储4096列。
        减少磁盘的IO，保证热数据的内存缓存命中率。   
	利用更有效的利用缓存，避免读入无效的冷数据。
        经常一起使用的列放在一张表中。
  （10）禁止在表中建议预留字段。
        预留字段的命名很难做到见命之意。
        预留字段很难确定存储类型，所以无法选择合适的数据类型。
        对预留字段的修改，会对表进行锁定。
  （11）禁止在数据库中存储图片和二进制数据。
  （12）禁止在线做数据库压力测试。
  （13）禁止在开发环境，测试环境直接连接开发环境。





2.索引设计规范
  （1）限制每张表的索引数量，建议单表的索引数量不要超过5个。
  （2）每一个innoDB表最好一有一个主键。
       不使用更新频繁的列作为主键，不使用多列主键
       不使用UUID,MD5,HASH，字符串作为主键
       建议自增的ID作为主键
  （3）常见索引列建议
	SELECT,UPDATE，DELETE语句的WHERE从句列上
        包含再ORDER BY，GROUP BY 和DISTINCT中的字段。
	多表JOIN的关联列
  （4）符合选择索引列的顺序
	索引是从左到右执行的，所以区分度高的列放在联合索引的最左端。
	在区分度差不多的情况下，将字段长度小的列放在联合索引的最左端。
	使用最频繁的列放在联合索引的最左端。
  （5）避免建立冗余索引和重复索引。
  （6）对于频繁的查询优先考虑使用覆盖索引：就是包含了所有查询字段的索引
	好处：避免Innodb表进行索引的二次查找
	      可以把随机IO变成顺序IO加快查询速率。
  （7）尽量避免使用外键
	不建议使用外键约束，但一定在表与表之间的关联键上建立索引
	外键也用于保证数据的参照完整性，但建议在业务端实现
 	外键会影响父标和字表的写操作，降低性能。


3.数据库字段设计规范
  （1）优先选择符合存储需要的最小的数据类型。
  （2）对于非负整数，要优先使用无符号整数来存储。
	无符号现对于有符号可以多出一倍的存储空间
  （3）尽可能把所有列定义为NOT NULL
       索引NULL列需要额外空间来保存是否为空，所以需要额外的空间。
  （4）避免使用枚举类型和TEXT,BLOB数据类型
	修改枚举值需要使用ALTER语句
	ENUM类型的ORDER BY操作效率低，需要额外的操作。
	禁止使用数值作为ENUM的枚举值
  （5）禁止字符串保存日期类型，使用TIMESTAMP和DATETIME存储日期
       无法使用日期函数进行比较和计算
       字符串存储日期需要更多的内存


4.数据库SQL开发规范
  （1）建议使用预编译语句进行数据库操作。
  （2）避免数据类型的隐式转换
  （3）充分利用表上已经存在的索引
       避免使用双%号的查询条件
       一个SQL只能利用到复合索引中的一列进行范围查询
  （4）使用left join或not exists来优化not in 操作 
  （5）避免使用子查询，可以把子查询优化为join操作
       子查询的结果集无法使用索引
       子查询会产生临时表操作，如果子查询数据量大则严重影响效率
       小号过多的CPU
  （6）避免使用JOIN关联太多的表
  （7）减少同数据库的交互次数 
       数据库更适合处理批量操作
       合并多个相同的操作到一起，可以提高处理效率
  （8）使用in代替or，in操作可以有效的利用索引
  （9）WHERE从句中禁止对列进行函数转换和计算
       对列进行函数转换或计算会导致无法使用索引
  （10）在明显不会有重复值时使用UNION ALL，而不是UNION
        UNION会把所有数据放到临时表中后再进行去重操作
        UNION ALL不会再对结果集进行去重操作
  （11）拆分复杂的大SQL为多个小SQL



5.数据库操作行为规范
  （1）超100万行批量写操作，要分批多次进行操作
       大批量操作可能会造成严重的主从延迟
       binlog日志为row格式时会产生大量的日志
       避免产生大事物操作
  （2）对于大表使用pt-online-change修改表结构
       避免大表修改产生的主从延迟
       避免在对表字段进行修改时进行锁表
  （3）禁止为程序使用的账号赋予super权限
  （4）对于程序连接数据库账号，遵循权限最小原则
    
      























